spring:
  datasource:
    url: jdbc:mysql://192.168.0.3:3306/gmall?characterEncoding=UTF-8
    username: root
    password: wr123456
    driver-class-name: com.mysql.cj.jdbc.Driver
    platform: mysql
    type: com.alibaba.druid.pool.DruidDataSource
       # 下面为连接池的补充设置，应用到上面所有数据源中
       # 初始化大小，最小，最大
    initialSize: 1
    minIdle: 3
    maxActive: 20
       # 配置获取连接等待超时的时间
    maxWait: 60000
       # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
       # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
       #validationQuery是用来验证数据库连接的查询语句
    validationQuery: select 1
       #指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除.
    testWhileIdle: true
       #借出连接时不要测试，否则很影响性能
    testOnBorrow: false
    testOnReturn: false
       # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
       # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
       # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
       # 合并多个DruidDataSource的监控数据
       #useGlobalDataSourceStat: true
server:
  port: 8080
mybatis-plus:
  mapper-locations: mapper/*.xml
  type-aliases-package: com.aryun.gmall.user.bean
  configuration:
    map-underscore-to-camel-case: true
  global-config:
    id-type: 0
    field-strategy: 2
    #大写下划线转换
    #capital-mode: true
    refresh-mapper: true
    #添加日志级别
logging:
  level:
    root: info
    com.aryun.gmall.user.mapper: trace
  pattern:
    conole: '%p%m%n'